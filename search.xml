<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>How to create a singleton base class with generic</title>
    <url>/2020/05/27/How-to-create-a-singleton-base-class-with-generic/</url>
    <content><![CDATA[<h2 id="Demand-scenario"><a href="#Demand-scenario" class="headerlink" title="Demand scenario"></a>Demand scenario</h2><p>   In game development, we may need a lot of singleton class , if we create it one by one and each of them all has a same function to get  singleton instance. This makes us doing a repetitive and unnessery work.<br>So, I want to create a base class with generic and implement a method to return a singleton instance.</p>
<h2 id="Initial-attempt"><a href="#Initial-attempt" class="headerlink" title="Initial attempt"></a>Initial attempt</h2><p>   I create a base class simply with a generic type T, and implement a static get method, but itâ€™s not work because of typescript is not allow to use generic type in a static member.<br>   According to ts(2302).</p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> ToSingleTon&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ins: <span class="built_in">any</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">get</span> Inst(): T &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.ins ? <span class="keyword">this</span>.ins : (<span class="keyword">this</span>.ins = <span class="keyword">new</span> <span class="keyword">this</span>());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    test() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">" base "</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>   By the way, in the method Inst(), we canâ€™t write new T(), because of T is only a type ,but not a value. So we should write as new this();</p>
<h2 id="Final-Solution"><a href="#Final-Solution" class="headerlink" title="Final Solution"></a>Final Solution</h2><p>   Define a function with generic type T named such as SingleTon<T>, and define a class in this function context, and under this context , we are allow to use generic type in static member method.</T></p>
<figure class="highlight ts"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">SingleTon</span>&lt;<span class="title">T</span>&gt;(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> ToSingleTon &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> ins: <span class="built_in">any</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">get</span> Inst(): T &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.ins ? <span class="keyword">this</span>.ins : (<span class="keyword">this</span>.ins = <span class="keyword">new</span> <span class="keyword">this</span>());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        test() &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">" base "</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ToSingleTon;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> test <span class="keyword">extends</span> SingleTon&lt;test&gt;() &#123;</span><br><span class="line">    test() &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">" test "</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test.Inst.test();</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>TypeScript</category>
      </categories>
      <tags>
        <tag>TypeScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Somthing about blog</title>
    <url>/2020/05/24/Somthing%20about%20blog/</url>
    <content><![CDATA[<p>This is my first post article, and I learned a lot when building my first personal blog.ðŸ¤£</p>
<p>About the purpose of building a blog, I just want to slow <del>donw</del> down my step, and do somthing more about thinking,<br>recording and also it can be my working notes.ðŸ¤”</p>
<p>These days, I have realized that I â€˜m making more and more mistakes in my work, and most of those can easy to be avoided.ðŸ˜”ðŸ˜”ðŸ˜”<br>The cause of this result is that I never have a plan before coding or doing other things, no plan, no framework, not strictly at all.</p>
<p>Although, I have some experience in game development since  I â€˜m in the University, but never do a systematic learning. And the consequence is that,<br>I lack a specialty of my profession.</p>
<p>Not only at work, the lack of notes makes me feel that I am losing everything of my life step by step, especially in a fast-paced life.</p>
<p>So, I hope my blog can not only make sense to my work, but to my life, to my fucking English learning.ðŸ‘€ðŸ‘€ðŸ‘€</p>
]]></content>
      <categories>
        <category>Daily</category>
      </categories>
      <tags>
        <tag>Daily</tag>
      </tags>
  </entry>
</search>
